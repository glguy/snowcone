NAME
  snowcone - solanum server notice console
SYNOPSIS
  snowcone -S address -N nick [-U user] [-G gecos] [-X password]
           [-O opername] [-K challenge] [-M mechanism]
           [-E saslname] [-C capabilities] [-L initfile]
           [-f filename] [-l host] [-p port] [-h]
DESCRIPTION
  snowcone provides a live view of server notices focused on awareness
  of recent connections and disconnections to the network. It can show
  information about the most recent connections as well as various load
  meters split by server and operators. It does this with a run-time
  editable scripting environment to support rapidly adapting to the
  needs of the current situation.

  Instead of bundling its own network connection support, snowcone relies
  on the socat application to make network connections. This allows
  snowcone to natively support a wide range of network connection options.
OPTIONS
  -S address       specify the IRC server to connect to using socat(1)
                   argument syntax.
  -N nick          IRC nickname (NICK)
  -U user          IRC username (USER)
  -G gecos         IRC gecos/realname (USER)
  -X password      IRC password (PASS)
  -O opername      IRC operator username (OPER and CHALLENGE)
  -K challenge     Path to RSA key for CHALLENGE. Challenge support requires
                   you to install an extra Lua dependency with: luarocks install openssl
  -M mechanism     SASL mechanism: PLAIN or EXTERNAL
  -E saslname      SASL PLAIN username
  -C capabilities  Extra space-delimited capabilities to request upon connect (CAP REQ)
  -L initfile      Path to Lua logic entry point
  -f filename      Path to Lua network configuration
  -l host          Binding host for Lua console
  -p port          Binding TCP port for Lua console
  -h               print this usage information
ENVIRONMENT
  Sensitive arguments are passed using environment variables to keep them
  out of the process list.

  IRC_PASSWORD       IRC password (PASS)
  IRC_SASL_PASSWORD  IRC account password (SASL PLAIN)
  IRC_OPER_PASSWORD  IRC operator password (OPER)
SOCAT ADDRESSES
  Check the socat(1) man page for an exhaustive set of connection
  addresses, but these will be the most commonly used:

  TCP:server:6667  Connect to a plain-text IRC server
  OPENSSL:server:6697,certificate=cert.pem  
    Connect to a TLS-enabled IRC server using a client-side certificate
LUA CONSOLE
  When a Lua console port is specified, snowcone will listen for
  connections on that port and provide a Lua console with access
  to snowcone's internal state. This can be useful for developing
  snowcone or adding custom logic at runtime. Calls to print from
  inside a console will be piped back to that console.
MODES
  F1  recent connections
  F2  server connection load
  F3  recent exits
  F4  server exit load
  F5  kline load
  F6  filter load
  F7  reconnecting nicknames
  F8  raw IRC console
  F9  network-mask connection tracker
  F10  recent bans
  C-n  next view
  C-p  previous view
SH RECENT CONNECTIONS
  The recent connections view has a number of special features. Click on
  a connection to select it for kline or unkline. The buttons below will
  allow you to set kline reasons, durations, and to see the number of
  affected users before you commit to the action.

  Q     only live connections
  W     only dead connections
  E     all connections
  K     issue kline
  Esc   clear filters, reset scroll, clear status message
  PgUp  scroll up
  PgDn  scroll down

  The first column shows when a user connected. It fades from white a
  character per second to indicate the most recent connections. Times
  are displayed in UTC.

  The second column usually shows reconnection counts for that nickname.
  When a client triggers a server-side filter, this counter will switch
  to showing the number of times this connection has tripped a filter.
  This is indicated with an exclamation point after the number.

  The third column shows the nickname, username, and hostname of the
  connected user. It will be green while the user is connected and turns
  red when the user disconnects. It updates when a user changes nicknames.

  The fourth column can show disconnect reasons, IP addresses, and GeoIP
  ASN names (in that order of preference). You can override that preference
  by cycling through modes using the first button in the toolbar.

  The fifth column shows the server the user is connected to.

  The sixth column shows the SASL identified account name for the user,
  if applicable, as well as the GECOS field.
SERVER LOAD
  The server load views (for connections and disconnections) provide a
  view of the load rates as well as the current state of the DNS
  rotations. Each column heading can be clicked in order to chose a
  sort order for this view.

  The rotating bar graphs show the number of events per second for the
  last minute. The bar graphs max out at 8 events per second.

  The load averages give an approximation of the number of connections
  per second in either the last 1, 5, or 15 minutes. These varying
  time windows can help interpret the numbers as showing when rates
  are increasing or decreasing over time and to help put spikes into
  perspective.

  The various columns full of 4 and 6 show which servers have known
  IPv4 and IPv6 address. They turn yellow when that address is in
  the DNS rotation corresponding to the column.

  The Mn column shows the MAIN rotation. The region column shows the
  region a server is in and if the server is in that region's DNS
  rotation. The AF column shows the IPV4 and IPV6 rotations.

  The Conns column shows the number number of connections for that
  server.

  The Up column shows the server this server is linked to in the
  direction of the configured primary_hub.
RAW CLIENT
  The raw client view (F8) is primarily intended for debugging. It exists
  to see what snowcone sees.

  C-r     Toggle raw/aligned message rendering
  Esc     Erase input buffer
  Enter   Execute IRC command

  /eval luacode             Evaluate arbitrary Lua code
  /filter pattern           Update the recent connection filter
                            using Lua pattern syntax
  /nettrack label address/prefix  Add a network to the F9 tracking view
  /quote raw_command        Send a raw IRC command
  /reload                   Reload Lua files

GEOIP SUPPORT
  Both legacy GeoIP and modern GeoIP Maxmind database are supported
  and will be used if they are found at startup time.
NETWORK CONFIGURATION
  Information about your network can be populated in the servers
  configuration file. The MAIN, IPV4, and IPV6 regions get special
  rendering treatment in the server list.

	{
	  primary_hub = 'hub.irc.tld',
	  regions = {
	    MAIN = { hostname = 'irc.tld' },
	    US   = { hostname = 'us.irc.tld', color = 'red' },
	  },
	  servers = {
	    'xyz.irc.tld' =
	      { alias = 'Xy', region = 'US',
	        ipv4 = '192.0.2.1', ipv6 = '2001:db8::16' }
	  },
	  kline_reasons = {
	    { 'banned', 'You are banned.' },
	  },
	}
FILES
  ~/.config/snowcone/servers.lua  
    Lua syntax table specifying server addresses and regions.
  /usr/share/snowcone/lua  
    Lua run-time source files. These can be edited at runtime. Specify
    an alternative entry point with -L.
  GeoLite2-ASN.mmdb  
    If the mmdb Lua library is installed, and the GeoLite2-ASN.mmdb
    database is in the current directory, snowcone will use it to provide
    more information about recent connections.
AUTHOR
  snowcone was written by Eric Mertens <glguy@libera.chat> and is published
  under the ISC license.
